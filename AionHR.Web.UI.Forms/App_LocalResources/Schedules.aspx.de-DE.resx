<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BasicInfoTabEditWindowTitle" xml:space="preserve">
    <value>Teilnahmeliste-Info</value>
  </data>
  <data name="BtnAddPeriod" xml:space="preserve">
    <value>Pause hinzufügen</value>
  </data>
  <data name="BtnRemovePeriod" xml:space="preserve">
    <value>Pause entfernen</value>
  </data>
  <data name="BtnUpdate" xml:space="preserve">
    <value>Speicher</value>
  </data>
  <data name="EditWindowsTitle" xml:space="preserve">
    <value>Teilnahmeliste bearbeiten</value>
  </data>
  <data name="FieldDays" xml:space="preserve">
    <value>Uralaubstage</value>
  </data>
  <data name="Fieldfci_max_lt" xml:space="preserve">
    <value>Maximale Verspätung beim ersten  Check In (m)</value>
  </data>
  <data name="Fieldfci_min_ot" xml:space="preserve">
    <value>Maximale Verspätung beim ersten  Check In (m)</value>
  </data>
  <data name="FieldFrom" xml:space="preserve">
    <value>Von Uhrzeit</value>
  </data>
  <data name="FieldIsBenifit" xml:space="preserve">
    <value>Zelt als Überstunden?</value>
  </data>
  <data name="Fieldlco_max_el" xml:space="preserve">
    <value>Maximale Zeit zum Frühverlassen beim letzten Check Out(m)</value>
  </data>
  <data name="Fieldlco_max_ot" xml:space="preserve">
    <value>Maximale Überstunden beim etzten Check Out (m)</value>
  </data>
  <data name="Fieldlco_min_ot" xml:space="preserve">
    <value>Minimale Überstunden beim etzten Check Out (m)</value>
  </data>
  <data name="FieldName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="FieldTo" xml:space="preserve">
    <value>Bis Zeit</value>
  </data>
  <data name="Periods" xml:space="preserve">
    <value>Perioden</value>
  </data>
  <data name="PeriodsTab" xml:space="preserve">
    <value>Perioden Tab</value>
  </data>
  <data name="SundayTab" xml:space="preserve">
    <value>Sonntag</value>
  </data>
  <data name="WindowTitle" xml:space="preserve">
    <value>Teilnahmeliste</value>
  </data>
  <data name="FieldFirstIn" xml:space="preserve">
    <value>Erster Check In</value>
  </data>
  <data name="FieldLastOut" xml:space="preserve">
    <value>Letzter Check Out</value>
    <comment>Check Out= Auschecken</comment>
  </data>
  <data name="MondayTab" xml:space="preserve">
    <value>Montag</value>
  </data>
  <data name="DayBreaksForm" xml:space="preserve">
    <value>Pausen am tag</value>
  </data>
  <data name="FieldDow" xml:space="preserve">
    <value>Tag in der Woche</value>
  </data>
  <data name="Break" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="EditDaysButton" xml:space="preserve">
    <value>Tage bearbeiten</value>
  </data>
  <data name="DayType" xml:space="preserve">
    <value>Tagetyp</value>
  </data>
  <data name="ApplyPattern" xml:space="preserve">
    <value>Muster anwenden</value>
  </data>
  <data name="BreakTimeFrom" xml:space="preserve">
    <value>Pausestart</value>
  </data>
  <data name="BreakTimeTo" xml:space="preserve">
    <value>Pausenende</value>
  </data>
  <data name="FieldFirstDayOfWeek" xml:space="preserve">
    <value>Erster Arbeitstag die Woche</value>
  </data>
  <data name="FieldworkingDays" xml:space="preserve">
    <value>Arbeitstage</value>
  </data>
  <data name="PatternWindowTitle" xml:space="preserve">
    <value>Musterauswahl</value>
  </data>
  <data name="WeekendDayType" xml:space="preserve">
    <value>Wochenendetyp</value>
  </data>
  <data name="WorkingDayType" xml:space="preserve">
    <value>Arbeitstagtyp</value>
  </data>
  <data name="WorkingTimeFrom" xml:space="preserve">
    <value>Arbeitsbeginn</value>
  </data>
  <data name="WorkingTimeTo" xml:space="preserve">
    <value>Arbeitsende</value>
  </data>
  <data name="FieldDuration" xml:space="preserve">
    <value>Dauer</value>
  </data>
  <data name="SetDefault" xml:space="preserve">
    <value>Legen Sie den Standardzeitplan fest!</value>
  </data>
  <data name="DefaultSetSucc" xml:space="preserve">
    <value>Der Standardzeitplan wurde erfolgreich festgelegt</value>
  </data>
  <data name="EnableAOT" xml:space="preserve">
    <value>Ankommen Überstunden aktivieren</value>
  </data>
  <data name="EnableBOT" xml:space="preserve">
    <value>Pauseüberstunden aktivieren</value>
  </data>
  <data name="EnableDOT" xml:space="preserve">
    <value>Abreise Überstunden aktivieren</value>
  </data>
  <data name="ArrivalOvertime" xml:space="preserve">
    <value>Ankommen Überstunden</value>
  </data>
  <data name="DepartureOvertime" xml:space="preserve">
    <value>Abreise Überstunden</value>
  </data>
  <data name="Lateness" xml:space="preserve">
    <value>Verspätung</value>
  </data>
  <data name="EnableEntryDayOverTime" xml:space="preserve">
    <value>Überstunden am Tag aktivieren</value>
  </data>
  <data name="EntryDayOverTime" xml:space="preserve">
    <value>Überstunden am Tag</value>
  </data>
  <data name="FieldEd_max_ot" xml:space="preserve">
    <value>Maximale Verspätung am Tag eintragen (m)</value>
  </data>
  <data name="FieldEd_min_ot" xml:space="preserve">
    <value>Minimale Verspätung am Tag eintragen (m)</value>
  </data>
  <data name="Batch" xml:space="preserve">
    <value>Stapel</value>
  </data>
</root>