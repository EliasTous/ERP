<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Approvals" xml:space="preserve">
    <value>Approbations</value>
  </data>
  <data name="BasicInfoTabEditWindowTitle" xml:space="preserve">
    <value>information de conge</value>
  </data>
  <data name="ButtonClear" xml:space="preserve">
    <value>clair</value>
  </data>
  <data name="CalDays" xml:space="preserve">
    <value>jours</value>
  </data>
  <data name="Department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="EditWindowsTitle" xml:space="preserve">
    <value>Modifier la demande de congé</value>
  </data>
  <data name="ErrorNoCalendar" xml:space="preserve">
    <value>Erreur: vous ne pouvez pas créer de congé sans avoir au moins un calendrier.</value>
  </data>
  <data name="ErrorSelectDate" xml:space="preserve">
    <value>Veuillez d'abord sélectionner une plage de dates valide</value>
  </data>
  <data name="ErrorSelectEmployee" xml:space="preserve">
    <value>S'il vous plaît sélectionnez un employé d'abord</value>
  </data>
  <data name="FieldAll" xml:space="preserve">
    <value>tout</value>
  </data>
  <data name="FieldApproved" xml:space="preserve">
    <value>Approuvé</value>
  </data>
  <data name="FieldBranch" xml:space="preserve">
    <value>Branche</value>
  </data>
  <data name="FieldDayId" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="FieldDestination" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="FieldDOW" xml:space="preserve">
    <value>jour</value>
  </data>
  <data name="FieldEmployeeName" xml:space="preserve">
    <value>Employee Name</value>
  </data>
  <data name="FieldEndDate" xml:space="preserve">
    <value>Date de fin</value>
  </data>
  <data name="FieldIsPaid" xml:space="preserve">
    <value>Est payé?</value>
  </data>
  <data name="FieldJustification" xml:space="preserve">
    <value>Justification</value>
  </data>
  <data name="FieldLeaveHours" xml:space="preserve">
    <value>heures quittees</value>
  </data>
  <data name="FieldLeaveRef" xml:space="preserve">
    <value>Ref</value>
  </data>
  <data name="FieldLtName" xml:space="preserve">
    <value>nom de type de conge</value>
  </data>
  <data name="FieldPending" xml:space="preserve">
    <value>en suspens</value>
  </data>
  <data name="FieldRecordId" xml:space="preserve">
    <value>ID d'enregistrement</value>
  </data>
  <data name="FieldRefused" xml:space="preserve">
    <value>Refusé</value>
  </data>
  <data name="FieldReturnDate" xml:space="preserve">
    <value>Date de retour</value>
  </data>
  <data name="FieldStartDate" xml:space="preserve">
    <value>Date de début</value>
  </data>
  <data name="FieldStatus" xml:space="preserve">
    <value>Statut</value>
  </data>
  <data name="FieldUsed" xml:space="preserve">
    <value>Utilisé</value>
  </data>
  <data name="FieldWorkingHours" xml:space="preserve">
    <value>Heures de travail</value>
  </data>
  <data name="FilterBranch" xml:space="preserve">
    <value>choisir un Branche</value>
  </data>
  <data name="FilterDepartment" xml:space="preserve">
    <value>choisir un Department</value>
  </data>
  <data name="FilterDivision" xml:space="preserve">
    <value>choisir une Division</value>
  </data>
  <data name="FilterEmployee" xml:space="preserve">
    <value>choisir un Employe</value>
  </data>
  <data name="FilterOpen" xml:space="preserve">
    <value>Afficher les demandes ouvertes</value>
  </data>
  <data name="FilterStatus" xml:space="preserve">
    <value>choisir une Statut</value>
  </data>
  <data name="LateDays" xml:space="preserve">
    <value>Derniers jours</value>
  </data>
  <data name="LeaveBalance" xml:space="preserve">
    <value>balance de conge</value>
  </data>
  <data name="LeaveDaysWindowTitle" xml:space="preserve">
    <value>Jours de congé</value>
  </data>
  <data name="LeaveEndWindowTitle" xml:space="preserve">
    <value>retour de conge</value>
  </data>
  <data name="LeaveInfo" xml:space="preserve">
    <value>information de conges</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>imprimer</value>
  </data>
  <data name="RecentLeaves" xml:space="preserve">
    <value>Récents congés</value>
  </data>
  <data name="ReturnInfo" xml:space="preserve">
    <value>Informations de retour</value>
  </data>
  <data name="ReturnNotes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="SpecifyStartDateFirst" xml:space="preserve">
    <value>Veuillez spécifier la date de début en premier!</value>
  </data>
  <data name="TotalText" xml:space="preserve">
    <value>Heures totales</value>
  </data>
  <data name="WindowTitle" xml:space="preserve">
    <value>Demandes de congés</value>
  </data>
  <data name="YearsInService" xml:space="preserve">
    <value>Années de service</value>
  </data>
  <data name="earnedLeaves" xml:space="preserve">
    <value>Congés gagnés:</value>
  </data>
  <data name="leavesBalance" xml:space="preserve">
    <value>Balance de conges :</value>
  </data>
  <data name="paidLeaves" xml:space="preserve">
    <value>Congés payés:</value>
  </data>
  <data name="usedLeaves" xml:space="preserve">
    <value>Feuilles utilisées:</value>
  </data>
  <data name="FieldReplacementEmployeeName" xml:space="preserve">
    <value>Employé de remplacement</value>
  </data>
</root>